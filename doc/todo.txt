-Controller: Connect RFM69W 915Mhz radio
 Can't do it to Mega because of 5V logic!
 Solder Radio and pins to breakout board

-Controller: Migrate to a 3V Arduino Due in preparation for a 3V radio.
 Also high current power supply does not hurt.

-Add StopAll or WaitTilEndSwitch command. 
 Usage scenario: slide left slow, pan left slow, hit endswitch, stop all.

-Test interaction with panner/tilter motors 

-Test pan endswitches - failed for now - can't figure out how these work.

-Terminate motor wires in the Pan/Tilt head to an RJ45 jack

-Controller:
 Evaluate compression when sending content of the LCD screen to remote.
 Algorithms good for short text strings with custom dictionary:

Version 0.4

+Controller: Free pins for radio
 Pin changes: 
   Move endswitch - from D2 to D3
   Move slide motor PWMA to D4
   Move pan motor PWMA to D5
   Move tilt motor PWMB to D6
+Controller: Replace an LCD/keyboard shield with a 
 separate 20x4 or 16x2 LCD - solder header pins
 and a keyboard on A0
 Pin changes: LCD is now on D33-28 - source change required!
 Draw Fritzing diagram

+Remote: 
 Assemble and test Breadboard+Anarduino+LCD
 Draw Fritzing diagram - conflict with D5 Anarduino internal use?
 Start development of the "Remote Access" code


Version 0.3

+Add new GUI mode for immediate control of one channel
 left right press and hold - move
 up/down sets the move speed
 The existing GUI is a multiple channel mode
 Switch between modes by press and hold of select
+Add ability to read commands from a serial port
+Pause/Resume - right when stop channel selected
+Add slider hardware and software interaction with it

Version 0.2

+Documentation

Version 0.1

+Add (unconditional) LOOP command. 
 Usage scenario: 
   BeginLoop
     slide left slow until endswitch is hit
     rest 5sec
     slide right slow until endswitch is hit
     rest 5sec
   EndLoop     
+Support trapezoidal velocity profiles to reduce jerks on the camera.
+Handle interrupts to process carriage hitting endswitches
+GUI: show remaining time for the selected command, not the very first one.
+GUI: when an active channel is selected Left/Right adjusts speed, Up/Down time
+Build a menu to choose channel to interact with, 
 handle start/stop/ speedChange on every channel
